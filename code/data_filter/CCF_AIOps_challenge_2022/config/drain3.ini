[SNAPSHOT]
snapshot_interval_minutes = 10
compress_state = True


# {"regex_pattern":"((?<=[^A-Za-z0-9])|^)([\\-\\+]?\\d+)((?=[^A-Za-z0-9])|$)", "mask_with": "NUM"},
# {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(([0-9a-f]{2,}:){3,}([0-9a-f]{2,}))((?=[^A-Za-z0-9])|$)", "mask_with": "ID"},
# {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})((?=[^A-Za-z0-9])|$)", "mask_with": "IP"},
# {"regex_pattern":"((?<=[^A-Za-z0-9])|^)([0-9a-f]{6,} ?){3,}((?=[^A-Za-z0-9])|$)", "mask_with": "SEQ"},
# {"regex_pattern":"((?<=[^A-Za-z0-9])|^)([0-9A-F]{4} ?){4,}((?=[^A-Za-z0-9])|$)", "mask_with": "SEQ"},
# {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(0x[a-f0-9A-F]+)((?=[^A-Za-z0-9])|$)", "mask_with": "HEX"},
# {"regex_pattern":"(?<=executed cmd )(\".+?\")", "mask_with": "CMD"},
[MASKING]
masking = [          
          {"regex_pattern":"(?<=severity: INFO\\, message: \\[Recv ListRecommendations\\] product_ids=\\[)(('[A-Z0-9]{10}'\\, ){4,}('[A-Z0-9]{10}')\\])", "mask_with": "productids"},
          {"regex_pattern":"(?<=severity: info\\, message: Transaction processed: visa ending )((\\d+     )(Amount: )(USD|CAD|JPY|EUR)([0-9]{1,})(\\.\\d+))", "mask_with": "amount"},
          {"regex_pattern":"(?<=severity: info\\, message: PaymentService#Charge invoked with request )(\\{.+?\\}\\})", "mask_with": "payreq"},
          {"regex_pattern":"(?<=Request finished in )([0-9]{1,}\\.[0-9]{1,})(?=ms 200 application/grpc)", "mask_with": "time"},
          {"regex_pattern":"(?<=Request finished in )([0-9]{1,}\\.[0-9]{1,})(?=ms 0 application/grpc)", "mask_with": "time"},
          {"regex_pattern":"(?<=etCartAsync called with userId=)([a-z0-9]{8}\\-[a-z0-9]{4}\\-[a-z0-9]{4}\\-[a-z0-9]{4}\\-[a-z0-9]{12})", "mask_with": "userId"},
          {"regex_pattern":"(?<=mptyCartAsync called with userId=)([a-z0-9]{8}\\-[a-z0-9]{4}\\-[a-z0-9]{4}\\-[a-z0-9]{4}\\-[a-z0-9]{12})", "mask_with": "userId"},
          {"regex_pattern":"(?<=ddItemAsync called with userId=)([a-z0-9]{8}\\-[a-z0-9]{4}\\-[a-z0-9]{4}\\-[a-z0-9]{4}\\-[a-z0-9]{12}.+?)($)", "mask_with": "userIdproductIdquantity"},
          {"regex_pattern":"(?<=severity: info\\, message: \\[PlaceOrder\\] user_id=)(\"[a-z0-9]{8}\\-[a-z0-9]{4}\\-[a-z0-9]{4}\\-[a-z0-9]{4}\\-[a-z0-9]{12}\")( user_currency=.+?$)", "mask_with": "userId"},
          {"regex_pattern":"(?<=severity: info\\, message: payment went through \\(transaction_id: )([a-z0-9]{8}\\-[a-z0-9]{4}\\-[a-z0-9]{4}\\-[a-z0-9]{4}\\-[a-z0-9]{12})(\\)$)", "mask_with": "transactionId"},
          {"regex_pattern":"(?<=^)(\\[40m\\\u001b\\[32minfo\\\u001b\\[39m\\\u001b\\[22m\\\u001b\\[49m:)(?= Microsoft.+?)", "mask_with": "color"},
          {"regex_pattern":"(?<=^)(\\[40m\\\u001b\\[1m\\\u001b\\[33mwarn\\\u001b\\[39m\\\u001b\\[22m\\\u001b\\[49m:)(?= Microsoft.+?)", "mask_with": "color"},
          {"regex_pattern":"(?<=^)(\\[40m\\\u001b\\[32minfo\\\u001b\\[39m\\\u001b\\[22m\\\u001b\\[49m:)(?= Grpc.+?)", "mask_with": "color"},
          {"regex_pattern":"(?<=^)(\\[41m\\\u001b\\[30mfail\\\u001b\\[39m\\\u001b\\[22m\\\u001b\\[49m:)(?= Grpc.+?)", "mask_with": "color"},
          {"regex_pattern":"(?<=EVERE: Exception while executing runnable io\\.grpc\\.internal\\.ServerImpl\\$JumpToApplicationThreadServerStreamListener\\$1HalfClosed@)([a-z0-9]{2,})", "mask_with": "id"},
          {"regex_pattern":"(?<=^)([a-z]{2} [0-9]{1,}\\, 2022 [0-9]{1,}:[0-9]{1,}:[0-9]{1,} PM)(?= io.+?)", "mask_with": "datetime"},
          {"regex_pattern":"(?<=^)([a-z]{2} [0-9]{1,}\\, 2022 [0-9]{1,}:[0-9]{1,}:[0-9]{1,} AM)(?= io.+?)", "mask_with": "datetime"},
          {"regex_pattern":"(?<=mysql\\] )(2022/[0-9]{1,}/[0-9]{1,} [0-9]{2}:[0-9]{2}:[0-9]{2})(?= packets\\.go:[0-9]{1,}: unexpected EOF$)", "mask_with": "datetime"},
          {"regex_pattern":"(?<=severity: warning\\, message: failed to query product by id: dial tcp: lookup basic\\-tidb\\-external\\.tidb\\-cluster on )(.+?)(?=: i/o timeout$)", "mask_with": "IP"},
          {"regex_pattern":"(?<=severity: warning\\, message: failed to query product by id: dial tcp: lookup basic\\-tidb\\-external\\.tidb\\-cluster on )(.+?)(?=: no such host$)", "mask_with": "IP"},
          {"regex_pattern":"(?<=rpc\\.Core\\.RpcException: Status)(\\(StatusCode=.{1}FailedPrecondition.{1}\\, Detail=.{1}Can't access cart storage\\. StackExchange\\.Redis\\.RedisTimeoutException: Timeout awaiting response.+?)(Timeouts\\)$)", "mask_with": "cartStorageRedisTimeout"},
          {"regex_pattern":"(?<=rpc\\.Core\\.RpcException: Status)(\\(StatusCode=.{1}FailedPrecondition.{1}\\, Detail=.{1}Can't access cart storage\\. StackExchange\\.Redis\\.RedisConnectionException: SocketClosed \\(ReadEndOfStream.+?)(.+?$)", "mask_with": "cartStorageRedisReadEndOfStream"},
          {"regex_pattern":"(?<=^)(022/[0-9]{1,}/[0-9]{1,} [0-9]{2}:[0-9]{2}:[0-9]{2})(?= failed to upload traces; HTTP status code: 503)", "mask_with": "datetime"},
          {"regex_pattern":"(?<=Heartbeat took longer than )(.+? at .+?)(?=This could be caused by thread pool starvation\\.)", "mask_with": "datetime"},

          {"regex_pattern":"(?<=POST /hipstershop\\.CurrencyService/Convert HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.CurrencyService/GetSupportedCurrencies HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.ShippingService/GetQuote HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.CheckoutService/PlaceOrder HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.ProductCatalogService/GetProduct HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.CurrencyService/Convert HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content0"},
          {"regex_pattern":"(?<=POST /hipstershop\\.CurrencyService/GetSupportedCurrencies HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content0"},
          {"regex_pattern":"(?<=POST /hipstershop\\.ShippingService/GetQuote HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content0"},
          {"regex_pattern":"(?<=POST /hipstershop\\.CheckoutService/PlaceOrder HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content0"},
          {"regex_pattern":"(?<=POST /hipstershop\\.ProductCatalogService/GetProduct HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content0"},
          {"regex_pattern":"(?<=POST /hipstershop\\.AdService/GetAds HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.AdService/GetAds HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.EmailService/SendOrderConfirmation HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.EmailService/SendOrderConfirmation HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content0"},
          {"regex_pattern":"(?<=POST /hipstershop\\.CartService/GetCart HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.CartService/GetCart HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content0"},
          {"regex_pattern":"(?<=POST /hipstershop\\.RecommendationService/ListRecommendations HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.RecommendationService/ListRecommendations HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content0"},
          {"regex_pattern":"(?<=POST /hipstershop\\.PaymentService/Charge HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.PaymentService/Charge HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content0"},
          {"regex_pattern":"(?<=POST /hipstershop\\.CartService/EmptyCart HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.CartService/EmptyCart HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content0"},
          {"regex_pattern":"(?<=POST /hipstershop\\.CartService/AddItem HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.CartService/AddItem HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content0"},
          {"regex_pattern":"(?<=POST /hipstershop\\.ProductCatalogService/ListProducts HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.ShippingService/ShipOrder HTTP/2)(.{1} 200 .+?)(default$)", "mask_with": "content"},
          {"regex_pattern":"(?<=POST /hipstershop\\.ProductCatalogService/ListProducts HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content0"},
          {"regex_pattern":"(?<=POST /hipstershop\\.ShippingService/ShipOrder HTTP/2)(.{1} 0 .+?)(default$)", "mask_with": "content0"},
          {"regex_pattern":"(?<=POST /api/traces HTTP/1\\.1)(.{1} 202 .+?)(default$)", "mask_with": "code202"},
          {"regex_pattern":"(?<=POST /api/traces HTTP/1\\.1)(.{1} 503 .+?)(default$)", "mask_with": "code503"},
          {"regex_pattern":"(?<=POST /api/v2/spans HTTP/1\\.1)(.{1} 202 .+?)(default$)", "mask_with": "code202"},
          {"regex_pattern":"(?<=POST /api/v2/spans HTTP/1\\.1)(.{1} 0 DC downstream\\_remote\\_disconnect .+?)(default$)", "mask_with": "code0"},
          {"regex_pattern":"(?<=POST /cart/checkout HTTP/1\\.1)(.{1} 0 DC downstream\\_remote\\_disconnect .+?)(default$)", "mask_with": "code0"},
          {"regex_pattern":"(?<=POST /cart HTTP/1\\.1)(.{1} 0 DC downstream\\_remote\\_disconnect .+?)(default$)", "mask_with": "code0"},
          {"regex_pattern":"(?<=POST / HTTP/1\\.1)(.{1} 0 DC downstream\\_remote\\_disconnect .+?)(default$)", "mask_with": "code0"},
          {"regex_pattern":"(?<=GET / HTTP/1\\.1)(.{1} 0 DC downstream\\_remote\\_disconnect .+?)(default$)", "mask_with": "code0"},
          {"regex_pattern":"(?<=POST /api/traces\\?format=jaeger\\.thrift HTTP/1\\.1)(.{1} 202 .+?)(default$)", "mask_with": "code202"},
          {"regex_pattern":"(?<=POST /api/traces\\?format=jaeger\\.thrift HTTP/1\\.1)(.{1} 503 .+?)(default$)", "mask_with": "code503"},
          {"regex_pattern":"(?<=GET /cart HTTP/1\\.1)(.{1} 200 .+?)(default$)", "mask_with": "code200"},
          {"regex_pattern":"(?<=GET /cart HTTP/1\\.1)(.{1} 500 .+?)(default$)", "mask_with": "code500"},
          {"regex_pattern":"(?<=GET /cart HTTP/1\\.1)(.{1} 0 .+?)(default$)", "mask_with": "code0"},
          {"regex_pattern":"(?<=POST /cart HTTP/1\\.1)(.{1} 302 .+?)(default$)", "mask_with": "code302"},
          {"regex_pattern":"(?<=POST /cart HTTP/1\\.1)(.{1} 500 .+?)(default$)", "mask_with": "code500"},
          {"regex_pattern":"(?<=POST /cart/checkout HTTP/1\\.1)(.{1} 200 .+?)(default$)", "mask_with": "code200"},
          {"regex_pattern":"(?<=POST /cart/checkout HTTP/1\\.1)(.{1} 500 .+?)(default$)", "mask_with": "code500"},
          {"regex_pattern":"(?<=GET /metrics HTTP/1\\.1)(.{1} 200 .+?)(default$)", "mask_with": "code200"},
          {"regex_pattern":"(?<=GET /product/)([A-Z0-9]{10} HTTP/1\\.1.{1} 200 .+?)(default$)", "mask_with": "code200"},
          {"regex_pattern":"(?<=GET /product/)([A-Z0-9]{10} HTTP/1\\.1.{1} 500 .+?)(default$)", "mask_with": "code500"},
          {"regex_pattern":"(?<=GET /product/)([A-Z0-9]{10} HTTP/1\\.1.{1} 0 .+?)(default$)", "mask_with": "code0"},
          {"regex_pattern":"(?<=POST /setCurrency HTTP/1\\.1)(.{1} 302 .+?)(default$)", "mask_with": "code302"},
          {"regex_pattern":"(?<=GET / HTTP/1\\.1)(.{1} 200 .+?)(default$)", "mask_with": "code200"},
          {"regex_pattern":"(?<=GET / HTTP/1\\.1)(.{1} 500 .+?)(default$)", "mask_with": "code500"},
          {"regex_pattern":"(?<=\\- \\- \\-.{1} 0 \\- \\- \\- )(.+?)( \\- \\-$)", "mask_with": "tidb0"},
          {"regex_pattern":"(?<=\\- \\- \\-.{1} 0 UF\\,URX \\- \\- )(.+?)( \\- \\-$)", "mask_with": "tidb0UFRX"},
          {"regex_pattern":"(?<=warning envoy config StreamAggregatedResources gRPC config stream closed: )([0-9]{1,})(?=\\, transport is closing$)", "mask_with": "NUM"},
          {"regex_pattern":"(?<=warning envoy config StreamAggregatedResources gRPC config stream closed: )([0-9]{1,})(?=\\, timeout sending$)", "mask_with": "NUM"},
          {"regex_pattern":"(?<=warning envoy config StreamAggregatedResources gRPC config stream closed: )([0-9]{1,})(?=\\, timed out waiting for server handshake$)", "mask_with": "NUM"},
          {"regex_pattern":"(?<=warning envoy config StreamAggregatedResources gRPC config stream closed: )([0-9]{1,}\\, connection error: desc = .+?)(?=i/o timeout.{1}$)", "mask_with": "content"},
          {"regex_pattern":"(?<=warning envoy config StreamAggregatedResources gRPC config stream closed: )([0-9]{1,}\\, connection error: desc = .+?)(?=no such host.{1}$)", "mask_with": "content"},
          {"regex_pattern":"(?<=warning envoy config StreamAggregatedResources gRPC config stream closed: )([0-9]{1,}\\, connection error: desc = .+?)(?=context deadline exceeded.{1}$)", "mask_with": "content"},
          {"regex_pattern":"(?<=info xdsproxy connected to upstream XDS server: istiod\\.istio\\-system\\.svc:)([0-9]{1,})($)", "mask_with": "NUM"},
          {"regex_pattern":"(?<=info cache generated new workload certificate latency=)(.+?ms ttl=.+?)(s$)", "mask_with": "NUMmsttl=NUMs"},
          {"regex_pattern":"(?<=^)(022/[0-9]{1,}/[0-9]{1,} [0-9]{2}:[0-9]{2}:[0-9]{2})(?= Post .{1}http://jaeger\\-collector.+?)", "mask_with": "datetime"}
          ]
mask_prefix = <: 
mask_suffix = :>

[DRAIN]
# engine is Optional parameter. Engine will be "Drain" if the engine argument is not specified.
# engine has two options: 'Drain' and 'JaccardDrain'.
# engine = Drain
# Similarity threshold for Drain, this hyperparameter is used to determine whether two events are similar enough to be grouped together. 
# if you want to get log pattern for much less similar events, you can set this value to a higher value, such as 0.9 or 1.
# Because of chasing microservice's api information, we set it to 1.
# In IncluRCA, sim_th is set to 0.4.
sim_th = 1
depth = 4
max_children = 100
max_clusters = 1024
extra_delimiters = ["_"]

[PROFILING]
enabled = True
report_sec = 30